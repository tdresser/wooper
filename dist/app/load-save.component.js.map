{"version":3,"file":"load-save.component.js","sourceRoot":"","sources":["../usr/local/google/home/tdresser/github/wooper/tmp/broccoli_type_script_compiler-input_base_path-XRKN3K9Y.tmp/0/src/app/load-save.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ViewChild, AfterViewInit, ElementRef, Renderer, Output, EventEmitter } from '@angular/core';\n\nimport { Loop, PlayState } from './loop';\n\nenum DragState {\n    NotDragging,\n    DraggingWithinSlop,\n    Dragging\n}\n\n@Component({\n    moduleId: module.id,\n    selector: 'load-save',\n    template: `\n    <style>\n      #folder {\n        /* TODO - get size from FOLDER_SIZE */\n        width:100px;\n        height:100px;\n        position: absolute;\n        right: 0;\n        margin:20px;\n      }\n      #file-input {\n        display:none;\n      }\n    </style>\n    <img #folder id='folder' src=\"./folder.svg\"/>\n    <!-- TODO: add accept -->\n    <input type=\"file\" #fileInput id=\"file-input\">\n`,\n    styles: [],\n    directives: [LoadSaveComponent]\n})\nexport class LoadSaveComponent implements AfterViewInit {\n    static get SLOP_SIZE(): number { return 75; };\n    static get FOLDER_SIZE(): number { return 120; };\n\n    private renderer: Renderer;\n    private dragState: DragState = DragState.NotDragging;\n    private loadingLoop: Loop;\n    @ViewChild('folder') folder;\n    @ViewChild('fileInput') fileInput;\n\n    @Output() loadEvent = new EventEmitter();\n\n    constructor(elementRef: ElementRef, renderer: Renderer) {\n        this.renderer = renderer;\n    }\n\n    pointerRelease(e): void {\n        this.dragState = DragState.NotDragging;\n        this.folder.nativeElement.style.left = '';\n        this.folder.nativeElement.style.right = '0';\n        this.folder.nativeElement.style.top = '0';\n        this.loadEvent.emit({x:e.clientX, y:e.clientY});\n    }\n\n    maybeStartDrag(e): void {\n        let x = e.offsetX - LoadSaveComponent.FOLDER_SIZE / 2;\n        let y = e.offsetY - LoadSaveComponent.FOLDER_SIZE / 2;\n\n        let distance = Math.sqrt(x * x + y * y);\n        if (distance > LoadSaveComponent.SLOP_SIZE) {\n            this.dragState = DragState.Dragging;\n        }\n    }\n\n    drag(e): void {\n        // TODO - this should probably be done in rAF.\n        let x = e.clientX - LoadSaveComponent.FOLDER_SIZE / 2;\n        let y = e.clientY - LoadSaveComponent.FOLDER_SIZE / 2;\n\n        this.folder.nativeElement.style.left = x + 'px';\n        this.folder.nativeElement.style.top = y + 'px';\n    }\n\n    loadInto(loop: Loop) {\n        this.loadingLoop = loop;\n        this.fileInput.nativeElement.click();\n    }\n\n    containsPoint(x:number, y:number): boolean {\n        let rect = this.folder.nativeElement.getBoundingClientRect();\n\n        let result = rect.left < x && x < rect.right &&\n            rect.top < y && y < rect.bottom;\n        return result;\n    }\n\n    ngAfterViewInit(): void {\n        this.renderer.listen(this.folder.nativeElement, 'pointerdown', (e) => {\n            this.folder.nativeElement.setPointerCapture(e.pointerId);\n            e.preventDefault();\n            this.dragState = DragState.DraggingWithinSlop;\n        });\n\n        this.renderer.listen(this.folder.nativeElement, 'pointerup', (e) => {\n            this.pointerRelease.bind(this)(e);\n        });\n\n        this.renderer.listen(this.folder.nativeElement, 'pointercancel', (e) => {\n            this.pointerRelease.bind(this)(e);\n        });\n\n        this.renderer.listen(this.folder.nativeElement, 'pointermove', (e) => {\n            e.preventDefault();\n            switch(this.dragState) {\n            case DragState.NotDragging:\n                return;\n            case DragState.DraggingWithinSlop:\n                this.maybeStartDrag(e);\n                break;\n            case DragState.Dragging:\n                this.drag(e);\n                break;\n            }\n        });\n\n        this.renderer.listen(this.fileInput.nativeElement, 'change', (e) => {\n            let file = e.target.files[0];\n\n            let reader = new FileReader();\n            reader.onload = (e) => {\n                // Typescript doesn't know this has a result attribute, so cast to 'any'.\n                let target: any = e.target;\n                let content = target.result;\n                this.loadingLoop.load(content);\n            };\n            reader.readAsDataURL(file);\n        });\n    }\n}\n"]}