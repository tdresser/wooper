{"version":3,"file":"app.component.js","sourceRoot":"","sources":["../usr/local/google/home/tdresser/github/wooper/tmp/broccoli_type_script_compiler-input_base_path-Sv8Ze6Xq.tmp/0/src/app/app.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAiF,eAAe,CAAC,CAAA;AACjG,0BAAqC,oBAAoB,CAAC,CAAA;AAE1D,+BAA8B,kBAAkB,CAAC,CAAA;AACjD,oCAAkC,uBAAuB,CAAC,CAAA;AAwC1D;IAUI;IACA,CAAC;IAVD,sBAAW,0BAAU;aAArB;YACI,MAAM,CAAC,CAAC,CAAC;QACb,CAAC;;;OAAA;;IAUD,8BAAO,GAAP,UAAQ,KAAK;QAAb,iBAOC;QANG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAE,UAAC,aAAa;YACvC,EAAE,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChD,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBAC3C,MAAM,CAAC;YACX,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8BAAO,GAAP,UAAQ,KAAK;QACT,IAAI,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC;QAE5B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACvB,MAAM,CAAC;QACX,CAAC;QAED,IAAI,CAAC,cAAc,CAAC,OAAO,CAAE,UAAC,aAAa;YACvC,EAAE,CAAC,CAAC,aAAa,KAAK,UAAU,CAAC,CAAC,CAAC;gBAC/B,EAAE,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChD,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;oBACpC,MAAM,CAAC;gBACX,CAAC;YACL,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAjCD;QAAC,mBAAY,CAAC,8BAAa,CAAC;;wDAAA;IAG5B;QAAC,gBAAS,CAAC,UAAU,CAAC;;kDAAA;IA9C1B;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,UAAU;YACpB,aAAa,EAAE,wBAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,0lBA8Bb;YACG,MAAM,EAAE,EAAE;YACV,UAAU,EAAE,CAAC,gCAAoB,EAAE,8BAAa,EAAE,uCAAiB,CAAC;SACvE,CAAC;;oBAAA;IAwCF,mBAAC;AAAD,CAAC,AAvCD,IAuCC;AAvCY,oBAAY,eAuCxB,CAAA","sourcesContent":["import { Component, ViewChildren, QueryList, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { APP_SHELL_DIRECTIVES } from '@angular/app-shell';\n\nimport { LoopComponent } from './loop.component';\nimport { LoadSaveComponent } from './load-save.component';\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-root',\n    encapsulation: ViewEncapsulation.None,\n    template: `\n<style>\n  * {\n    margin:0;\n    padding:0;\n  }\n  html, body {\n    height: 100%;\n  }\n  app-root {\n    display:block;\n    height: 100%;\n  }\n\n  #loops-container {\n    text-align:center;\n    position:relative;\n    top:30%;\n  }\n  loop {\n    display:inline-block;\n  }\n</style>\n<load-save #loadSave (loadEvent)=\"loading($event)\"></load-save>\n<div id=\"loops-container\">\n  <loop (mergeEvent)=\"merging($event)\"></loop>\n  <loop (mergeEvent)=\"merging($event)\"></loop>\n  <loop (mergeEvent)=\"merging($event)\"></loop>\n  <loop (mergeEvent)=\"merging($event)\"></loop>\n</div>\n`,\n    styles: [],\n    directives: [APP_SHELL_DIRECTIVES, LoopComponent, LoadSaveComponent]\n})\nexport class AppComponent {\n    static get LOOP_COUNT(): number {\n        return 4;\n    };\n\n    @ViewChildren(LoopComponent)\n    loopComponents: QueryList<LoopComponent>;\n\n    @ViewChild('loadSave') loadSave;\n\n    constructor() {\n    }\n\n    loading(event): void {\n        this.loopComponents.forEach( (loopComponent) => {\n            if (loopComponent.containsPoint(event.x, event.y)) {\n                this.loadSave.loadInto(loopComponent.loop);\n                return;\n            }\n        });\n    }\n\n    merging(event): void {\n        let sourceLoop = event.loop;\n\n        if (this.loadSave.containsPoint(event.x, event.y)) {\n            sourceLoop.loop.save();\n            return;\n        }\n\n        this.loopComponents.forEach( (loopComponent) => {\n            if (loopComponent !== sourceLoop) {\n                if (loopComponent.containsPoint(event.x, event.y)) {\n                    loopComponent.mergeWith(sourceLoop);\n                    return;\n                }\n            }\n        });\n    }\n}\n"]}